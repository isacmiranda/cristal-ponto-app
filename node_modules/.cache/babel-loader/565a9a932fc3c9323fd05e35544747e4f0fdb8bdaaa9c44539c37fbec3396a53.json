{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristal Acquacenter\\\\Desktop\\\\cristal-ponto-app\\\\src\\\\pages\\\\PinPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PinPage() {\n  _s();\n  const [pin, setPin] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [horaAtual, setHoraAtual] = useState('');\n  const navigate = useNavigate();\n\n  // Dados fictícios de funcionários (para exemplo)\n  const funcionarios = [{\n    nome: 'João',\n    pin: '123456'\n  }, {\n    nome: 'Maria',\n    pin: '654321'\n  }\n  // Adicione mais funcionários conforme necessário\n  ];\n\n  // Simulação de registros (entrada e saída)\n  const registros = [{\n    pin: '123456',\n    data: '28/05/2025',\n    tipo: 'entrada',\n    horario: '08:00:00'\n  }, {\n    pin: '654321',\n    data: '28/05/2025',\n    tipo: 'saida',\n    horario: '18:00:00'\n  }\n  // Adicione mais registros conforme necessário\n  ];\n  useEffect(() => {\n    atualizarHora();\n    const intervalo = setInterval(atualizarHora, 1000);\n    return () => clearInterval(intervalo);\n  }, []);\n  const atualizarHora = () => {\n    const agora = new Date();\n    setHoraAtual(agora.toLocaleTimeString('pt-BR'));\n  };\n  const registrarPonto = () => {\n    if (!pin) return;\n\n    // Verificando se o PIN é válido\n    const funcionario = funcionarios.find(f => f.pin === pin);\n    if (!funcionario) {\n      setMensagem('PIN inválido!');\n      setPin('');\n      return;\n    }\n    const agora = new Date();\n    const data = agora.toLocaleDateString('pt-BR');\n    const horario = agora.toLocaleTimeString('pt-BR');\n\n    // Verificando se o registro é de entrada ou saída\n    const registrosFuncionario = registros.filter(reg => reg.pin === pin && reg.data === data);\n    const tipo = registrosFuncionario.length % 2 === 0 ? 'entrada' : 'saida';\n\n    // Simulando a gravação do novo registro\n    registros.push({\n      pin,\n      data,\n      tipo,\n      horario\n    });\n    setMensagem(tipo === 'entrada' ? `Bom trabalho, ${funcionario.nome}!` : `Até logo, ${funcionario.nome}!`);\n    setPin('');\n  };\n  const handleTecla = valor => {\n    if (valor === 'C') {\n      setPin('');\n    } else if (valor === 'OK') {\n      registrarPonto();\n    } else {\n      if (pin.length < 6) setPin(pin + valor);\n    }\n  };\n  const teclas = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'C', '0', 'OK'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-blue-900 to-blue-500 text-white flex flex-col items-center justify-center px-4 py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl md:text-3xl font-bold mb-1\",\n        children: \"Sistema de Ponto Cristal Acquacenter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg md:text-xl\",\n        children: horaAtual\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-3xl md:text-4xl tracking-widest bg-white/20 py-3 px-8 rounded-xl mb-6\",\n      children: pin.replace(/./g, '●')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 max-w-[300px] sm:max-w-[360px] md:max-w-[400px]\",\n      children: teclas.map((tecla, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTecla(tecla),\n        className: `w-20 h-20 sm:w-24 sm:h-24 md:w-28 md:h-28 \n              rounded-full font-bold text-xl sm:text-2xl shadow flex items-center justify-center\n              ${tecla === 'OK' ? 'bg-green-600 text-white hover:bg-green-500' : tecla === 'C' ? 'bg-red-600 text-white hover:bg-red-500' : 'bg-white text-blue-900 hover:bg-blue-100'}\n            `,\n        children: tecla\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 bg-white/20 text-white px-6 py-3 rounded-xl text-lg text-center max-w-xs sm:max-w-md\",\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/login'),\n      className: \"mt-6 bg-black/70 hover:bg-black text-white px-6 py-3 rounded-xl text-lg shadow-lg\",\n      children: \"\\u2699\\uFE0F \\xC1rea Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(PinPage, \"nnVzxi6BZd0QLrsl8OJhiJUDi50=\", false, function () {\n  return [useNavigate];\n});\n_c = PinPage;\nvar _c;\n$RefreshReg$(_c, \"PinPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","PinPage","_s","pin","setPin","mensagem","setMensagem","horaAtual","setHoraAtual","navigate","funcionarios","nome","registros","data","tipo","horario","atualizarHora","intervalo","setInterval","clearInterval","agora","Date","toLocaleTimeString","registrarPonto","funcionario","find","f","toLocaleDateString","registrosFuncionario","filter","reg","length","push","handleTecla","valor","teclas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","map","tecla","i","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Cristal Acquacenter/Desktop/cristal-ponto-app/src/pages/PinPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function PinPage() {\n  const [pin, setPin] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const [horaAtual, setHoraAtual] = useState('');\n  const navigate = useNavigate();\n\n  // Dados fictícios de funcionários (para exemplo)\n  const funcionarios = [\n    { nome: 'João', pin: '123456' },\n    { nome: 'Maria', pin: '654321' },\n    // Adicione mais funcionários conforme necessário\n  ];\n\n  // Simulação de registros (entrada e saída)\n  const registros = [\n    { pin: '123456', data: '28/05/2025', tipo: 'entrada', horario: '08:00:00' },\n    { pin: '654321', data: '28/05/2025', tipo: 'saida', horario: '18:00:00' },\n    // Adicione mais registros conforme necessário\n  ];\n\n  useEffect(() => {\n    atualizarHora();\n    const intervalo = setInterval(atualizarHora, 1000);\n    return () => clearInterval(intervalo);\n  }, []);\n\n  const atualizarHora = () => {\n    const agora = new Date();\n    setHoraAtual(agora.toLocaleTimeString('pt-BR'));\n  };\n\n  const registrarPonto = () => {\n    if (!pin) return;\n\n    // Verificando se o PIN é válido\n    const funcionario = funcionarios.find((f) => f.pin === pin);\n\n    if (!funcionario) {\n      setMensagem('PIN inválido!');\n      setPin('');\n      return;\n    }\n\n    const agora = new Date();\n    const data = agora.toLocaleDateString('pt-BR');\n    const horario = agora.toLocaleTimeString('pt-BR');\n\n    // Verificando se o registro é de entrada ou saída\n    const registrosFuncionario = registros.filter((reg) => reg.pin === pin && reg.data === data);\n    const tipo = registrosFuncionario.length % 2 === 0 ? 'entrada' : 'saida';\n\n    // Simulando a gravação do novo registro\n    registros.push({ pin, data, tipo, horario });\n\n    setMensagem(tipo === 'entrada' ? `Bom trabalho, ${funcionario.nome}!` : `Até logo, ${funcionario.nome}!`);\n    setPin('');\n  };\n\n  const handleTecla = (valor) => {\n    if (valor === 'C') {\n      setPin('');\n    } else if (valor === 'OK') {\n      registrarPonto();\n    } else {\n      if (pin.length < 6) setPin(pin + valor);\n    }\n  };\n\n  const teclas = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'C', '0', 'OK'];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-900 to-blue-500 text-white flex flex-col items-center justify-center px-4 py-6\">\n      {/* Título e hora */}\n      <div className=\"text-center mb-6\">\n        <h1 className=\"text-2xl md:text-3xl font-bold mb-1\">Sistema de Ponto Cristal Acquacenter</h1>\n        <p className=\"text-lg md:text-xl\">{horaAtual}</p>\n      </div>\n\n      {/* Campo PIN */}\n      <div className=\"text-3xl md:text-4xl tracking-widest bg-white/20 py-3 px-8 rounded-xl mb-6\">\n        {pin.replace(/./g, '●')}\n      </div>\n\n      {/* Teclado */}\n      <div className=\"grid grid-cols-3 gap-4 max-w-[300px] sm:max-w-[360px] md:max-w-[400px]\">\n        {teclas.map((tecla, i) => (\n          <button\n            key={i}\n            onClick={() => handleTecla(tecla)}\n            className={`w-20 h-20 sm:w-24 sm:h-24 md:w-28 md:h-28 \n              rounded-full font-bold text-xl sm:text-2xl shadow flex items-center justify-center\n              ${tecla === 'OK' ? 'bg-green-600 text-white hover:bg-green-500' :\n                tecla === 'C' ? 'bg-red-600 text-white hover:bg-red-500' :\n                'bg-white text-blue-900 hover:bg-blue-100'}\n            `}\n          >\n            {tecla}\n          </button>\n        ))}\n      </div>\n\n      {/* Mensagem de saudação */}\n      {mensagem && (\n        <div className=\"mt-6 bg-white/20 text-white px-6 py-3 rounded-xl text-lg text-center max-w-xs sm:max-w-md\">\n          {mensagem}\n        </div>\n      )}\n\n      {/* Botão área admin */}\n      <button\n        onClick={() => navigate('/login')}\n        className=\"mt-6 bg-black/70 hover:bg-black text-white px-6 py-3 rounded-xl text-lg shadow-lg\"\n      >\n        ⚙️ Área Admin\n      </button>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}